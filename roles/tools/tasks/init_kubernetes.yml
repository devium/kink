---
- name: Init master node
  block:
    - name: Install Kubernetes Python library
      pip:
        name:
          - kubernetes

    - name: Check Kubernetes cluster status
      shell:
        cmd: kubectl cluster-info
      ignore_errors: yes
      register: cluster_status
      changed_when: false

    - name: Init kubeadm if not running correctly
      block:
        - name: Reset kubeadm
          command:
            cmd: kubeadm reset -f

        - name: Init kubeadm
          shell:
            cmd: |
              kubeadm init \
              --pod-network-cidr=10.244.0.0/16 \
              --kubernetes-version={{ kubernetes_version }} \
              --ignore-preflight-errors=NumCPU \
              --upload-certs \
              --apiserver-cert-extra-sans 10.0.0.1
      when: cluster_status.rc != 0

    - name: Create Kubernetes config dir
      file:
        path: /root/.kube
        state: directory

    - name: Copy default Kubernetes config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: yes

    - name: Apply secrets definition
      k8s:
        kind: Secret
        definition:
          - metadata:
              name: hcloud
              namespace: kube-system
            stringData:
              token: "{{ hcloud_token }}"
              network: "{{ network_id }}"
          - metadata:
              name: hcloud-csi
              namespace: kube-system
            stringData:
              token: "{{ hcloud_token }}"

    - name: Create Kubernetes resource definition directory
      file:
        path: "{{ ansible_env.HOME }}/k8s"
        state: directory

    - name: Get resource definitions for Hetzner Cloud controller manager, networking, and CSI
      get_url:
        url: "{{ item.url }}"
        dest: "{{ ansible_env.HOME }}/k8s/{{ item.url | basename }}"
        checksum: "sha256:{{ item.checksum }}"
      with_items:
        - {
            url: https://raw.githubusercontent.com/hetznercloud/hcloud-cloud-controller-manager/v1.12.1/deploy/ccm-networks.yaml,
            checksum: f2b3426c2f0f0527fa0779e5be43d38994ded816adda85fea78147d3860548e3
          }
        - {
            url: https://raw.githubusercontent.com/flannel-io/flannel/v0.16.3/Documentation/kube-flannel.yml,
            checksum: c9c860d678d5b4734e393f4f18e6125dea9c308751eba803c4062092055f80e2
          }
        - {
            url: https://raw.githubusercontent.com/hetznercloud/csi-driver/v1.6.0/deploy/kubernetes/hcloud-csi.yml,
            checksum: d91863023e3c522ef649882cc1d49f16f62f7e016f025d9915a645e86a8adc71
          }

    - name: Apply cloud controller and networking definitions
      k8s:
        src: "{{ item }}"
      with_items:
        - "{{ ansible_env.HOME }}/k8s/ccm-networks.yaml"
        - "{{ ansible_env.HOME }}/k8s/kube-flannel.yml"
        - "{{ ansible_env.HOME }}/k8s/hcloud-csi.yml"

    - name: Get worker node join command
      command:
        cmd: kubeadm token create --print-join-command
      register: join_command
      changed_when: false

    - name: Get joined worker nodes
      command:
        cmd: kubectl get nodes
      register: kube_nodes
      changed_when: false

  when: inventory_hostname == "master"

- name: Join worker nodes
  command:
    cmd: "{{ hostvars.master.join_command.stdout }}"
  when: inventory_hostname in groups.workers and inventory_hostname not in hostvars.master.kube_nodes.stdout
