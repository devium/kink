---
- name: Check unregistered required actions
  uri:
    url: "{{ keycloak_realm_api_base }}/authentication/unregistered-required-actions"
    method: GET
    headers: "{{ keycloak_api_headers }}"
  register: unregistered_required_actions

- name: Register WebAuthn U2F
  uri:
    url: "{{ keycloak_realm_api_base }}/authentication/register-required-action"
    method: POST
    headers: "{{ keycloak_api_headers }}"
    body_format: json
    body: { "providerId": "webauthn-register", "name": "Register WebAuthn U2F" }
    status_code: [204]
  changed_when: true
  when: "'webauthn-register' in unregistered_required_actions.json | string"

- name: Register WebAuthn Passwordless
  uri:
    url: "{{ keycloak_realm_api_base }}/authentication/register-required-action"
    method: POST
    headers: "{{ keycloak_api_headers }}"
    body_format: json
    body: { "providerId": "webauthn-register-passwordless", "name": "Register WebAuthn Passwordless" }
    status_code: [204]
  changed_when: true
  when: "'webauthn-register-passwordless' in unregistered_required_actions.json | string"

- name: Get top-level authentication flows
  uri:
    url: "{{ keycloak_realm_api_base }}/authentication/flows"
    method: GET
    headers: "{{ keycloak_api_headers }}"
  register: flows

- name: Build authentication flow tree
  block:
  - name: Create new authentication top-level flow
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "alias": "browser-custom",
          "providerId": "basic-flow",
          "topLevel": true
        }
      status_code: [201]
    changed_when: true

  - name: Create cookie execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "auth-cookie" }
      status_code: [201]
    changed_when: true
    register: auth_cookie

  - name: Set cookie execution to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ auth_cookie.location.split('/')[-1] }}", "requirement": "ALTERNATIVE" }
      status_code: [202]
    changed_when: true


  - name: Create identity provider execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "identity-provider-redirector" }
      status_code: [201]
    changed_when: true
    register: identity_provider_redirector

  - name: Set identity provider execution to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ identity_provider_redirector.location.split('/')[-1] }}", "requirement": "ALTERNATIVE" }
      status_code: [202]
    changed_when: true


  - name: Create forms flow
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions/flow"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "alias": "flow-forms",
          "description": "",
          "provider": "registration-page-form",
          "type": "basic-flow"
        }
      status_code: [201]
    changed_when: true
    register: forms_flow

  - name: Get browser executions
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions"
      method: GET
      headers: "{{ keycloak_api_headers }}"
    register: browser_executions

  - name: Set forms flow execution to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/browser-custom/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "id": "{{ execution_id }}",
          "requirement": "ALTERNATIVE"
        }
      status_code: [202]
    changed_when: true
    vars:
      flow_id: "{{ forms_flow.location.split('/')[-1] }}"
      query: "json[?flowId=='{{ flow_id }}'].id"
      execution_id: "{{ (browser_executions | json_query(query))[0] }}"


  - name: Create username form execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/flow-forms/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "auth-username-form" }
      status_code: [201]
    changed_when: true


  - name: Create factors subflow
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/flow-forms/executions/flow"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "alias": "subflow-factors",
          "description": "",
          "provider": "registration-page-form",
          "type": "basic-flow"
        }
      status_code: [201]
    changed_when: true
    register: factors_subflow

  - name: Get forms executions
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/flow-forms/executions"
      method: GET
      headers: "{{ keycloak_api_headers }}"
    register: forms_executions

  - name: Set factors subflow execution to required
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/flow-forms/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "id": "{{ execution_id }}",
          "requirement": "REQUIRED"
        }
      status_code: [202]
    changed_when: true
    vars:
      flow_id: "{{ factors_subflow.location.split('/')[-1] }}"
      query: "json[?flowId=='{{ flow_id }}'].id"
      execution_id: "{{ (forms_executions | json_query(query))[0] }}"


  - name: Create WebAuthn passwordless execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-factors/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "webauthn-authenticator-passwordless" }
      status_code: [201]
    changed_when: true
    register: webauthn_authenticator_passwordless

  - name: Set WebAuthn Passwordless execution to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-factors/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ webauthn_authenticator_passwordless.location.split('/')[-1] }}", "requirement": "ALTERNATIVE" }
      status_code: [202]
    changed_when: true


  - name: Create password subflow
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-factors/executions/flow"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "alias": "subflow-password",
          "description": "",
          "provider": "registration-page-form",
          "type": "basic-flow"
        }
      status_code: [201]
    changed_when: true
    register: password_subflow

  - name: Get factors executions
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-factors/executions"
      method: GET
      headers: "{{ keycloak_api_headers }}"
    register: factors_executions

  - name: Set password subflow execution to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-factors/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "id": "{{ execution_id }}",
          "requirement": "ALTERNATIVE"
        }
      status_code: [202]
    changed_when: true
    vars:
      flow_id: "{{ password_subflow.location.split('/')[-1] }}"
      query: "json[?flowId=='{{ flow_id }}'].id"
      execution_id: "{{ (factors_executions | json_query(query))[0] }}"


  - name: Create password execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-password/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "auth-password-form" }
      status_code: [201]
    changed_when: true
    register: auth_password_form

  - name: Set password execution to required
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-password/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ auth_password_form.location.split('/')[-1] }}", "requirement": "REQUIRED" }
      status_code: [202]
    changed_when: true


  - name: Create conditional OTP subflow
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-password/executions/flow"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "alias": "subflow-conditional-otp",
          "description": "",
          "provider": "registration-page-form",
          "type": "basic-flow"
        }
      status_code: [201]
    changed_when: true
    register: conditional_otp_subflow

  - name: Get password executions
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-password/executions"
      method: GET
      headers: "{{ keycloak_api_headers }}"
    register: password_executions

  - name: Set conditional OTP subflow execution to conditional
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-password/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: |
        {
          "id": "{{ execution_id }}",
          "requirement": "CONDITIONAL"
        }
      status_code: [202]
    changed_when: true
    vars:
      flow_id: "{{ conditional_otp_subflow.location.split('/')[-1] }}"
      query: "json[?flowId=='{{ flow_id }}'].id"
      execution_id: "{{ (password_executions | json_query(query))[0] }}"


  - name: Create user-configured condition execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-conditional-otp/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "conditional-user-configured" }
      status_code: [201]
    changed_when: true
    register: user_configured_condition

  - name: Set user-configured condition to required
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-conditional-otp/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ user_configured_condition.location.split('/')[-1] }}", "requirement": "REQUIRED" }
      status_code: [202]
    changed_when: true


  - name: Create WebAuthn authenticator execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-conditional-otp/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "webauthn-authenticator" }
      status_code: [201]
    changed_when: true
    register: webauthn_authenticator

  - name: Set user-configured condition to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-conditional-otp/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ webauthn_authenticator.location.split('/')[-1] }}", "requirement": "ALTERNATIVE" }
      status_code: [202]
    changed_when: true


  - name: Create OTP form execution
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-conditional-otp/executions/execution"
      method: POST
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "provider": "auth-otp-form" }
      status_code: [201]
    changed_when: true
    register: auth_otp

  - name: Set user-configured condition to alternative
    uri:
      url: "{{ keycloak_realm_api_base }}/authentication/flows/subflow-conditional-otp/executions"
      method: PUT
      headers: "{{ keycloak_api_headers }}"
      body_format: json
      body: { "id": "{{ auth_otp.location.split('/')[-1] }}", "requirement": "ALTERNATIVE" }
      status_code: [202]
    changed_when: true

  when: "'browser-custom' not in flows.json | string"


- name: Set browser flow to custom version
  uri:
    url: "{{ keycloak_realm_api_base }}"
    method: PUT
    headers: "{{ keycloak_api_headers }}"
    body_format: json
    body: { "browserFlow": "browser-custom" }
    status_code: [204]
  changed_when: true
  when: "realm.json.browserFlow != 'browser-custom'"
