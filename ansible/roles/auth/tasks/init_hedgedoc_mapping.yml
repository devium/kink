---
# HedgeDoc needs access to the OpenID user ID to allow for consistent username changes.
- name: Get client scopes
  uri:
    url: "{{ keycloak_realm_api_base }}/client-scopes"
    method: GET
    headers: "{{ keycloak_api_headers }}"
  register: client_scopes

- name: Create client scope to include id in userinfo endpoint
  uri:
    url: "{{ keycloak_realm_api_base }}/client-scopes"
    method: POST
    headers: "{{ keycloak_api_headers }}"
    body_format: json
    body: |
      {
        "attributes": {
          "display.on.consent.screen": "true",
          "include.in.token.scope": "true"
        },
        "name": "userinfo_id",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "id",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "id",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "name": "sub_id_mapper",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          }
        ]
      }
    status_code: [201]
  changed_when: true
  when: "'userinfo_id' not in client_scopes.json | string"
  register: userinfo_id_scope_location

- name: Refresh client scopes
  uri:
    url: "{{ keycloak_realm_api_base }}/client-scopes"
    method: GET
    headers: "{{ keycloak_api_headers }}"
  register: client_scopes

- name: Add id scope to HedgeDoc client default scopes
  uri:
    url: "{{ keycloak_realm_api_base }}/clients/{{ hedgedoc_client.end_state.id }}/default-client-scopes/{{ scope_id }}"
    method: PUT
    headers: "{{ keycloak_api_headers }}"
    status_code: [204]
  changed_when: true
  when: "'userinfo_id' not in hedgedoc_client.end_state.defaultClientScopes"
  vars:
    query: "json[?name=='userinfo_id'].id"
    scope_id: "{{ (client_scopes | json_query(query))[0] }}"
