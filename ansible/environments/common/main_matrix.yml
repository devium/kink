# Matrix variables need to override variables defined in group_vars/matrix_servers, so they are put in a smaller scope.

# In this playbook we specify the matrix domain as the base domain.
matrix_domain: "{{ domain }}"

matrix_ssl_lets_encrypt_support_email: "x@y.com"
matrix_coturn_turn_static_auth_secret: "{{ vault_matrix_coturn_turn_static_auth_secret }}"
matrix_synapse_macaroon_secret_key: "{{ vault_matrix_synapse_macaroon_secret_key }}"

matrix_postgres_enabled: false

matrix_synapse_database_host: "{{ db_host }}"
matrix_synapse_database_user: "{{ db_matrix_username }}"
matrix_synapse_database_password: "{{ db_matrix_password }}"
matrix_synapse_database_database: "{{ db_matrix_database }}"

matrix_s3_media_store_enabled: true
matrix_s3_media_store_bucket_name: "{{ s3_bucket_name }}"
matrix_s3_media_store_aws_access_key: "{{ s3_access_key_id }}"
matrix_s3_media_store_aws_secret_key: "{{ s3_access_key_secret }}"
matrix_s3_media_store_region: "eu-central-1"

matrix_ntpd_package: chrony
matrix_ntpd_service: chronyd

matrix_vars_yml_snapshotting_src: "{{ inventory_dir }}/host_vars/matrix/main.yml"
matrix_nginx_proxy_base_domain_serving_enabled: true
matrix_nginx_proxy_proxy_matrix_client_api_forwarded_location_synapse_oidc_api_enabled: true
matrix_synapse_password_config_localdb_enabled: false
matrix_synapse_enable_registration: false

matrix_synapse_admin_enabled: true

matrix_synapse_configuration_extension_yaml: |
  oidc_providers:
  - idp_id: keycloak
    idp_name: "Keycloak"
    issuer: "https://{{ auth_domain }}/auth/realms/{{ keycloak_realm }}"
    client_id: "matrix"
    client_secret: "{{ keycloak_matrix_secret }}"
    scopes: ["openid", "profile"]
    authorization_endpoint: "https://{{ auth_domain }}/auth/realms/{{ keycloak_realm }}/protocol/openid-connect/auth"
    token_endpoint: "https://{{ auth_domain }}/auth/realms/{{ keycloak_realm }}/protocol/openid-connect/token"
    userinfo_endpoint: "https://{{ auth_domain }}/auth/realms/{{ keycloak_realm }}/protocol/openid-connect/userinfo"
    user_mapping_provider:
      config:
        localpart_template: "{% raw %}{{ user.sub.split('-')[0] }}{% endraw %}"
        display_name_template: "{% raw %}{{ user.preferred_username }}{% endraw %}"
        email_template: "{% raw %}{{ user.email }}{% endraw %}"

matrix_jitsi_enabled: true

# Run `bash inventory/scripts/jitsi-generate-passwords.sh` to generate these passwords,
# or define your own strong passwords manually.
matrix_jitsi_jicofo_component_secret: "{{ vault_matrix_jitsi_jicofo_component_secret }}"
matrix_jitsi_jicofo_auth_password: "{{ vault_matrix_jitsi_jicofo_auth_password }}"
matrix_jitsi_jvb_auth_password: "{{ vault_matrix_jitsi_jvb_auth_password }}"
matrix_jitsi_jibri_recorder_password: "{{ vault_matrix_jitsi_jibri_recorder_password }}"
matrix_jitsi_jibri_xmpp_password: "{{ vault_matrix_jitsi_jibri_xmpp_password }}"

matrix_jitsi_xmpp_modules: "muc_rooms"
matrix_jitsi_prosody_container_http_host_bind_port: 5280
matrix_nginx_proxy_proxy_jitsi_additional_server_configuration_blocks:
  - |
    location /rooms {
      resolver 127.0.0.11 valid=5s;
      set $backend "matrix-jitsi-prosody:5280";
      proxy_pass http://$backend;

      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
    }
